var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","logger","mineosrails","application","object","server","servertest","serverscontroller","serverscontrollertest","servershelper","accept_eula()","archive()","backup()","console()","create()","create()","create_from_archive()","create_paths()","delete()","delete_paths()","destroy()","edit()","eula()","get_start_args()","index()","kill()","mem()","modify_sc()","modify_sp()","new()","new()","overlay_sp()","pid()","restore()","sc()","sc!()","set_env()","setup()","show()","sleep_until()","sp()","sp!()","start()","start_catch_errors()","stop()","test_archive()","test_backup()","test_catch_bind_issue()","test_catch_bogus_timeout()","test_catch_eula_failure()","test_catch_normal_execution()","test_change_eula_state()","test_check_eula_state()","test_create_from_archive()","test_create_only_missing_server_paths()","test_create_server_config()","test_create_server_paths()","test_create_server_properties()","test_create_server_via_convenience_method()","test_delete_server()","test_delete_server_paths()","test_java_jar_start_args_conventional()","test_java_jar_start_args_unconventional()","test_kill()","test_live_directory()","test_memory_checks()","test_modify_attr_from_sc()","test_modify_sc_without_creating_first()","test_modify_server_properties()","test_name()","test_overlay_properties_onto_server_properties()","test_parse_stdout()","test_php_phar_start_args()","test_pid()","test_read_server_properties()","test_restore()","test_restore_while_server_running()","test_send_test_to_server_console()","test_send_text_to_downed_server()","test_server_name_is_valid()","test_server_start()","test_sleep_until()","test_start_server_when_already_running()","test_stop()","test_unrecognized_get_start_args_request()","update()","valid_servername()","gemfile","gemfile.lock","license","readme","rakefile","application.js","servers.coffee","application.css","scaffolds.scss","servers.scss","index.json.jbuilder","show.json.jbuilder","config.ru","eula","server.properties","test.log","404.html","422.html","500.html","favicon.ico","robots"],"longSearchIndex":["applicationcontroller","applicationhelper","logger","mineosrails","mineosrails::application","object","server","servertest","serverscontroller","serverscontrollertest","servershelper","server#accept_eula()","server#archive()","server#backup()","server#console()","server#create()","serverscontroller#create()","server#create_from_archive()","server#create_paths()","server#delete()","server#delete_paths()","serverscontroller#destroy()","serverscontroller#edit()","server#eula()","server#get_start_args()","serverscontroller#index()","server#kill()","server#mem()","server#modify_sc()","server#modify_sp()","server::new()","serverscontroller#new()","server#overlay_sp()","server#pid()","server#restore()","server#sc()","server#sc!()","server#set_env()","servertest#setup()","serverscontroller#show()","server#sleep_until()","server#sp()","server#sp!()","server#start()","server#start_catch_errors()","server#stop()","servertest#test_archive()","servertest#test_backup()","servertest#test_catch_bind_issue()","servertest#test_catch_bogus_timeout()","servertest#test_catch_eula_failure()","servertest#test_catch_normal_execution()","servertest#test_change_eula_state()","servertest#test_check_eula_state()","servertest#test_create_from_archive()","servertest#test_create_only_missing_server_paths()","servertest#test_create_server_config()","servertest#test_create_server_paths()","servertest#test_create_server_properties()","servertest#test_create_server_via_convenience_method()","servertest#test_delete_server()","servertest#test_delete_server_paths()","servertest#test_java_jar_start_args_conventional()","servertest#test_java_jar_start_args_unconventional()","servertest#test_kill()","servertest#test_live_directory()","servertest#test_memory_checks()","servertest#test_modify_attr_from_sc()","servertest#test_modify_sc_without_creating_first()","servertest#test_modify_server_properties()","servertest#test_name()","servertest#test_overlay_properties_onto_server_properties()","servertest#test_parse_stdout()","servertest#test_php_phar_start_args()","servertest#test_pid()","servertest#test_read_server_properties()","servertest#test_restore()","servertest#test_restore_while_server_running()","servertest#test_send_test_to_server_console()","servertest#test_send_text_to_downed_server()","servertest#test_server_name_is_valid()","servertest#test_server_start()","servertest#test_sleep_until()","servertest#test_start_server_when_already_running()","servertest#test_stop()","servertest#test_unrecognized_get_start_args_request()","serverscontroller#update()","server#valid_servername()","","","","","","","","","","","","","","","","","","","","",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Logger","","Logger.html","",""],["MineosRails","","MineosRails.html","",""],["MineosRails::Application","","MineosRails/Application.html","",""],["Object","","Object.html","",""],["Server","","Server.html","",""],["ServerTest","","ServerTest.html","",""],["ServersController","","ServersController.html","",""],["ServersControllerTest","","ServersControllerTest.html","",""],["ServersHelper","","ServersHelper.html","",""],["accept_eula","Server","Server.html#method-i-accept_eula","()","<p>Writes an accepted eula.txt to the filesystem\n"],["archive","Server","Server.html#method-i-archive","()","<p>Create a gzipped tarball containing all server files\n"],["backup","Server","Server.html#method-i-backup","()","<p>Create an rdiff-backup of the main server directory\n"],["console","Server","Server.html#method-i-console","(text)","<p>Submit a string of text to the process&#39; stdin\n"],["create","Server","Server.html#method-i-create","(server_type)","<p>Create directory paths and establish server.config (convenience)\n"],["create","ServersController","ServersController.html#method-i-create","()","<p>POST /servers POST /servers.json\n"],["create_from_archive","Server","Server.html#method-i-create_from_archive","(filepath)","<p>Create a new server from an existing tarball (convenience)\n"],["create_paths","Server","Server.html#method-i-create_paths","()","<p>Create directory paths in filesystem Includes\n/var/games/minecraft/{servers,backup,archive}/servername …\n"],["delete","Server","Server.html#method-i-delete","()","<p>Delete server directories and files (convenience)\n"],["delete_paths","Server","Server.html#method-i-delete_paths","()","<p>Delete directory paths from filesystem Includes\n/var/games/minecraft/{servers,backup,archive}/servername …\n"],["destroy","ServersController","ServersController.html#method-i-destroy","()","<p>DELETE /servers/1 DELETE /servers/1.json\n"],["edit","ServersController","ServersController.html#method-i-edit","()","<p>GET /servers/1/edit\n"],["eula","Server","Server.html#method-i-eula","()","<p>Reads eula.txt and returns boolean equivalent\n"],["get_start_args","Server","Server.html#method-i-get_start_args","(type)","<p>Returns tokenized arguments for starting server in array Has different\nstarting requirements based on …\n"],["index","ServersController","ServersController.html#method-i-index","()","<p>GET /servers GET /servers.json\n"],["kill","Server","Server.html#method-i-kill","(signal = :sigterm)","<p>Attempts to kill a server&#39;s process ID forcefully\n"],["mem","Server","Server.html#method-i-mem","()","<p>Return a hash of the server&#39;s process&#39; memory footprint\n"],["modify_sc","Server","Server.html#method-i-modify_sc","(attr, value, section)","<p>Modify in-memory hash for server.config (convenience)\n"],["modify_sp","Server","Server.html#method-i-modify_sp","(attr, value)","<p>Modify in-memory hash for server.properties (convenience)\n"],["new","Server","Server.html#method-c-new","(name)",""],["new","ServersController","ServersController.html#method-i-new","()","<p>GET /servers/new\n"],["overlay_sp","Server","Server.html#method-i-overlay_sp","(hash)","<p>Accepts hash and applies key:value pairs to server.properties (convenience)\n"],["pid","Server","Server.html#method-i-pid","()","<p>Returns the PID of a server process\n"],["restore","Server","Server.html#method-i-restore","(steps)","<p>Restore the live server directory to the state of a previous backup\n"],["sc","Server","Server.html#method-i-sc","()","<p>Return hash of server.config file from in-memory This will “create” one if\nabsent, but will …\n"],["sc!","Server","Server.html#method-i-sc-21","()","<p>Writes in-memory hash to ini-formatted server.config\n"],["set_env","Server","Server.html#method-i-set_env","()","<p>Establish an easy reference @env for common paths\n"],["setup","ServerTest","ServerTest.html#method-i-setup","()",""],["show","ServersController","ServersController.html#method-i-show","()","<p>GET /servers/1 GET /servers/1.json\n"],["sleep_until","Server","Server.html#method-i-sleep_until","(state, timeout = 60)","<p>A non-busywait method to halt execution until a given state triggers Each\ncondition must be pre-programmed. …\n"],["sp","Server","Server.html#method-i-sp","()","<p>Return hash of server.properties file from in-memory This will “create” one\nif absent, but …\n"],["sp!","Server","Server.html#method-i-sp-21","()","<p>Writes in-memory hash to ini-like server.properties\n"],["start","Server","Server.html#method-i-start","()","<p>Attempt to start the server executable based on server type This will start\na new thread for parsing …\n"],["start_catch_errors","Server","Server.html#method-i-start_catch_errors","(timeout = 25)","<p>Attempt to start the server executable based on server type This does the\nsame as self.start but with …\n"],["stop","Server","Server.html#method-i-stop","()","<p>Attempts to stop a server by submitting &#39;stop&#39; to the process\n"],["test_archive","ServerTest","ServerTest.html#method-i-test_archive","()",""],["test_backup","ServerTest","ServerTest.html#method-i-test_backup","()",""],["test_catch_bind_issue","ServerTest","ServerTest.html#method-i-test_catch_bind_issue","()",""],["test_catch_bogus_timeout","ServerTest","ServerTest.html#method-i-test_catch_bogus_timeout","()",""],["test_catch_eula_failure","ServerTest","ServerTest.html#method-i-test_catch_eula_failure","()",""],["test_catch_normal_execution","ServerTest","ServerTest.html#method-i-test_catch_normal_execution","()",""],["test_change_eula_state","ServerTest","ServerTest.html#method-i-test_change_eula_state","()",""],["test_check_eula_state","ServerTest","ServerTest.html#method-i-test_check_eula_state","()",""],["test_create_from_archive","ServerTest","ServerTest.html#method-i-test_create_from_archive","()",""],["test_create_only_missing_server_paths","ServerTest","ServerTest.html#method-i-test_create_only_missing_server_paths","()",""],["test_create_server_config","ServerTest","ServerTest.html#method-i-test_create_server_config","()",""],["test_create_server_paths","ServerTest","ServerTest.html#method-i-test_create_server_paths","()",""],["test_create_server_properties","ServerTest","ServerTest.html#method-i-test_create_server_properties","()",""],["test_create_server_via_convenience_method","ServerTest","ServerTest.html#method-i-test_create_server_via_convenience_method","()",""],["test_delete_server","ServerTest","ServerTest.html#method-i-test_delete_server","()",""],["test_delete_server_paths","ServerTest","ServerTest.html#method-i-test_delete_server_paths","()",""],["test_java_jar_start_args_conventional","ServerTest","ServerTest.html#method-i-test_java_jar_start_args_conventional","()",""],["test_java_jar_start_args_unconventional","ServerTest","ServerTest.html#method-i-test_java_jar_start_args_unconventional","()",""],["test_kill","ServerTest","ServerTest.html#method-i-test_kill","()",""],["test_live_directory","ServerTest","ServerTest.html#method-i-test_live_directory","()",""],["test_memory_checks","ServerTest","ServerTest.html#method-i-test_memory_checks","()",""],["test_modify_attr_from_sc","ServerTest","ServerTest.html#method-i-test_modify_attr_from_sc","()",""],["test_modify_sc_without_creating_first","ServerTest","ServerTest.html#method-i-test_modify_sc_without_creating_first","()",""],["test_modify_server_properties","ServerTest","ServerTest.html#method-i-test_modify_server_properties","()",""],["test_name","ServerTest","ServerTest.html#method-i-test_name","()",""],["test_overlay_properties_onto_server_properties","ServerTest","ServerTest.html#method-i-test_overlay_properties_onto_server_properties","()",""],["test_parse_stdout","ServerTest","ServerTest.html#method-i-test_parse_stdout","()",""],["test_php_phar_start_args","ServerTest","ServerTest.html#method-i-test_php_phar_start_args","()",""],["test_pid","ServerTest","ServerTest.html#method-i-test_pid","()",""],["test_read_server_properties","ServerTest","ServerTest.html#method-i-test_read_server_properties","()",""],["test_restore","ServerTest","ServerTest.html#method-i-test_restore","()",""],["test_restore_while_server_running","ServerTest","ServerTest.html#method-i-test_restore_while_server_running","()",""],["test_send_test_to_server_console","ServerTest","ServerTest.html#method-i-test_send_test_to_server_console","()",""],["test_send_text_to_downed_server","ServerTest","ServerTest.html#method-i-test_send_text_to_downed_server","()",""],["test_server_name_is_valid","ServerTest","ServerTest.html#method-i-test_server_name_is_valid","()",""],["test_server_start","ServerTest","ServerTest.html#method-i-test_server_start","()",""],["test_sleep_until","ServerTest","ServerTest.html#method-i-test_sleep_until","()",""],["test_start_server_when_already_running","ServerTest","ServerTest.html#method-i-test_start_server_when_already_running","()",""],["test_stop","ServerTest","ServerTest.html#method-i-test_stop","()",""],["test_unrecognized_get_start_args_request","ServerTest","ServerTest.html#method-i-test_unrecognized_get_start_args_request","()",""],["update","ServersController","ServersController.html#method-i-update","()","<p>PATCH/PUT /servers/1 PATCH/PUT /servers/1.json\n"],["valid_servername","Server","Server.html#method-i-valid_servername","(name)","<p>Checks a name is directory-safe and follows a few other historical MineOS\nconventions\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p># Bundle edge Rails instead: gem &#39;rails&#39;, github:\n&#39;rails/rails&#39; …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  actionmailer (4.2.5)\n    actionpack (= 4.2.5)\n    actionview ...</pre>\n"],["LICENSE","","LICENSE.html","","\n<pre>                   GNU GENERAL PUBLIC LICENSE\n                      Version 3, 29 June 2007\n\nCopyright ...</pre>\n"],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"],["Rakefile","","Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["application.js","","app/assets/javascripts/application_js.html","","<p>// This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["servers.coffee","","app/assets/javascripts/servers_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["application.css","","app/assets/stylesheets/application_css.html","","\n<pre>This is a manifest file that&#39;ll be compiled into application.css, which will include all the files\nlisted ...</pre>\n"],["scaffolds.scss","","app/assets/stylesheets/scaffolds_scss.html","","<p>body {\n\n<pre>background-color: #fff;\ncolor: #333;\nfont-family: verdana, arial, helvetica, sans-serif;\nfont-size: ...</pre>\n"],["servers.scss","","app/assets/stylesheets/servers_scss.html","","<p>// Place all the styles related to the servers controller here. // They\nwill automatically be included …\n"],["index.json.jbuilder","","app/views/servers/index_json_jbuilder.html","","<p>json.array!(@servers) do |server|\n\n<pre>json.extract! server, :id, :name\njson.url server_url(server, format: ...</pre>\n"],["show.json.jbuilder","","app/views/servers/show_json_jbuilder.html","","<p>json.extract! @server, :id, :name, :created_at, :updated_at\n"],["config.ru","","config_ru.html","","<p># This file is used by Rack-based servers to start the application.\n<p>require ::File.expand_path(&#39;../config/environment&#39;, …\n"],["eula","","lib/assets/eula_txt.html","","<p>#By changing the setting below to TRUE you are indicating your agreement to\nour EULA (account.mojang.com/documents/minecraft_eula …\n"],["server.properties","","lib/assets/server_properties.html","","<p>#Minecraft server properties #Wed Jan 27 12:46:18 MST 2016\nmax-tick-time=60000 generator-settings= force-gamemode=false …\n"],["test.log","","log/test_log.html","",""],["404.html","","public/404_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The page you were looking for doesn&#39;t exist (404)&lt;/title&gt; ...</pre>\n"],["422.html","","public/422_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The change you wanted was rejected (422)&lt;/title&gt; ...</pre>\n"],["500.html","","public/500_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;We&#39;re sorry, but something went wrong (500)&lt;/title&gt; ...</pre>\n"],["favicon.ico","","public/favicon_ico.html","",""],["robots","","public/robots_txt.html","","<p>See www.robotstxt.org/robotstxt.html for documentation on how to use the\nrobots.txt file\n<p>To ban all spiders …\n"]]}}